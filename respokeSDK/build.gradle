buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
    }
}

apply plugin: 'com.android.library'

repositories {
    mavenCentral()
    jcenter()
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'

    configurations {
        javadocDeps
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.2.0'
    compile 'io.pristine:libjingle:9340@aar'
    compile 'com.digium.respoke:AndroidAsync:2.1.7'
}

apply plugin: 'maven'
apply plugin: 'signing'

task androidJavadocs(type: Javadoc) {
    options.addBooleanOption('Xdoclint:none', true)
    source = android.sourceSets.main.java.source
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.linkSource true
    destinationDir = file("../javadoc/")
    failOnError false
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.source
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}


group = "com.digium.respoke"
version = "1.4.2"

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Respoke Android SDK'
        artifactId 'respoke-sdk'
        packaging 'jar'
        description 'Add live voice, video, text and data features to your mobile app'
        url 'https://www.respoke.io/'

        scm {
          connection 'scm:git@github.com:respoke/respoke-sdk-android.git'
          developerConnection 'scm:git@github.com:respoke/respoke-sdk-android.git'
          url 'https://github.com/respoke/respoke-sdk-android'
        }

        licenses {
          license {
            name 'MIT License'
            url 'https://github.com/respoke/respoke-sdk-android/blob/master/LICENSE'
          }
        }

        developers {
          developer {
            id 'jpadams'
            name 'Respoke.io'
            email 'info@respoke.io'
          }
        }
      }
    }
  }
}
